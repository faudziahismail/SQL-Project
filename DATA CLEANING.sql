-- Data Cleaning 

SELECT * 
FROM layoffs
;

-- 1 REMOVE DUPLICATES
-- 2. STANDARDIZE DATA 
-- 3. NULLS VALUE/ BLANK VALUES
-- 4. REMOVE COULMNS OR ROWS 


CREATE TABLE LAYOFFS_STAGING   # CREATE A TABLE FOR STAGIN SO RAW DATASET IS SAFE 
LIKE LAYOFFS
;

SELECT * 
FROM layoffs_staging
;

INSERT LAYOFFS_STAGING   # COPYING FROM THE RAW DATASET
SELECT* 
FROM layoffs
;

-- REMOVE DUPLICATES


WITH DUPLICATE_CTE AS    # CREATING  CTE TABLE 
(SELECT *, 
 ROW_NUMBER () OVER(
 PARTITION BY COMPANY,LOCATION, INDUSTRY, TOTAL_LAID_OFF, PERCENTAGE_LAID_OFF, `DATE`,STAGE
 ,COUNTRY,FUNDS_RAISED_MILLIONS) AS ROW_NUM
FROM layoffs_staging
)
SELECT *
FROM DUPLICATE_CTE
WHERE ROW_NUM >1
;

SELECT * 
FROM layoffs_staging
WHERE COMPANY = 'CASPER';  # FOUND CASPER COMPANY IS DUPLICATES

CREATE TABLE `layoffs_staging2` (
  `company` text,
  `location` text,
  `industry` text,
  `total_laid_off` int DEFAULT NULL,
  `percentage_laid_off` text,
  `date` text,
  `stage` text,
  `country` text,
  `funds_raised_millions` int DEFAULT NULL,
  `ROW_NUM` INT   # ADDING A NEW COLUMN = ROW_NUM 
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;


SELECT * 
FROM LAYOFFS_STAGING2
;

INSERT INTO LAYOFFS_STAGING2
SELECT *, 
 ROW_NUMBER () OVER(
 PARTITION BY COMPANY,LOCATION, INDUSTRY, TOTAL_LAID_OFF, PERCENTAGE_LAID_OFF, `DATE`,STAGE
 ,COUNTRY,FUNDS_RAISED_MILLIONS) AS ROW_NUM
FROM layoffs_staging
;

DELETE 
FROM LAYOFFS_STAGING2
WHERE ROW_NUM >1 ;


SELECT * 
FROM LAYOFFS_STAGING2    # DONE REMOVING DUPLICATES
;

-- STANDARDIZING DATA 

SELECT COMPANY, TRIM(COMPANY)
FROM layoffs_staging2 
;
UPDATE LAYOFFS_STAGING2
SET COMPANY = TRIM(COMPANY);

SELECT DISTINCT INDUSTRY
FROM layoffs_staging2 

;  

UPDATE LAYOFFS_STAGING2 
SET INDUSTRY = 'Crypto'
WHERE INDUSTRY LIKE 'CRYPTO%'
;

SELECT *
FROM LAYOFFS_STAGING2  
ORDER BY 1  
;

UPDATE layoffs_staging2 
SET COUNTRY = trim(trailing '.' FROM country)
WHERE COUNTRY LIKE 'UNITED STATES%'
;

SELECT `DATE`,
STR_TO_DATE(`DATE`,'%m/%d/%Y')     #(COLUMN NAME,DATE FORMAT)-must follow uppecase and lowercase as such
FROM LAYOFFS_STAGING2  
;

UPDATE layoffs_staging2 
SET `date` = STR_TO_DATE(`DATE`,'%m/%d/%Y')
;

select `date` 
from layoffs_staging2
;

ALTER TABLE layoffs_staging2             # NEVER DO IT ON THE RAW DATASET 
MODIFY COLUMN `date` DATE ;

## dealing with nulls & blank spACE

SELECT * 
FROM layoffs_staging2
WHERE TOTAL_LAID_OFF IS NULL
AND PERCENTAGE_LAID_OFF IS NULL ;

# CHANGE BLNAK TO NULL SO IT WILL FILL IT UP LATER EASIER
UPDATE layoffs_staging2
SET industry = NULL 
WHERE industry = ''
;

SELECT *
FROM layoffs_staging2
WHERE INDUSTRY IS NULL 
OR INDUSTRY  = '';

# FILLING UP THE MISSING BLANKS WITH CURRENT DATA MULTIPLES
SELECT *
FROM layoffs_staging2
WHERE COMPANY LIKE 'BALLY%'
;
# CHECKING BY JOINING SAME TABLE WITH SIMILAR NOT NULL INDUSTRY. WE CHECK LOCATION AS AIRBNB CAN HAVE MANY LOC
SELECT T1.industry, T2.industry 
FROM layoffs_staging2  T1
JOIN layoffs_staging2 T2
	ON T1.COMPANY = T2.COMPANY 
    AND T1.location = T2.location
WHERE (T1.industry IS NULL OR T1.industry = '')
AND T2.industry IS NOT NULL 
;
# WE COPY THE NOT NUL IN TO THE BLANKS 

UPDATE layoffs_staging2 T1 
JOIN layoffs_staging2 T2
	ON T1.COMPANY = T2.COMPANY 
SET T1.INDUSTRY = T2.INDUSTRY 
WHERE T1.industry IS NULL 
AND T2.industry IS NOT NULL
;

SELECT * 
FROM layoffs_staging2
WHERE TOTAL_LAID_OFF IS NULL
AND PERCENTAGE_LAID_OFF IS NULL
;

# DELETEING THE NULLS IN TOT AND % LAID OFF COL 
DELETE
FROM layoffs_staging2
WHERE TOTAL_LAID_OFF IS NULL
AND PERCENTAGE_LAID_OFF IS NULL
;

# REMOVE/DROP A COLUMN 
SELECT * 
FROM layoffs_staging2
;

ALTER TABLE layoffs_staging2
DROP COLUMN ROW_NUM
;

