-- EXPLORATORY DATA ANALYSIS

SELECT * 
FROM layoffs_staging2
;
# WORK ON TOT LAID OFF
SELECT MAX(total_laid_off), MAX(percentage_laid_off) 
FROM layoffs_staging2
;

SELECT * 
FROM layoffs_staging2
WHERE percentage_laid_off = 1
ORDER BY funds_raised_millions DESC
;
#CHECKING ON EACH COLUMN BASES ON SUM TOT LAID OFF
SELECT COMPANY, SUM(TOTAL_LAID_OFF) 
FROM layoffs_staging2
GROUP BY COMPANY
ORDER BY 2 DESC   # 2 IS THE SECOND COLUMN 
;
# DATES WHEN LAID OFF STARTED
SELECT MIN(`DATE`), MAX(`DATE`) 
FROM layoffs_staging2
;

SELECT INDUSTRY, SUM(TOTAL_LAID_OFF) 
FROM layoffs_staging2
GROUP BY INDUSTRY
ORDER BY 2 DESC   # 2 IS THE SECOND COLUMN 
;

SELECT YEAR(`DATE`), SUM(TOTAL_LAID_OFF) 
FROM layoffs_staging2
GROUP BY YEAR(`DATE`)
ORDER BY 1 DESC   
;

SELECT STAGE, SUM(TOTAL_LAID_OFF) 
FROM layoffs_staging2
GROUP BY STAGE
ORDER BY 2 DESC   
;

SELECT COMPANY, AVG(percentage_laid_off) 
FROM layoffs_staging2
GROUP BY COMPANY
ORDER BY 2 DESC   
;
# LOOKING AT PER MONTH BY TOT NUMBER OF LAID OFF OCCUR
-- DOING A ROLLING SUM 
SELECT SUBSTRING(`DATE`,1,7) AS `MONTH`, SUM(total_laid_off)
FROM layoffs_staging2
WHERE SUBSTRING(`DATE`,1,7) IS NOT NULL 
GROUP BY `MONTH`
ORDER BY 1 ASC
;

# USE CTE
WITH ROLLING_TOT AS 
(SELECT SUBSTRING(`DATE`,1,7) AS `MONTH`, SUM(total_laid_off) AS TOT_OFF
FROM layoffs_staging2
WHERE SUBSTRING(`DATE`,1,7) IS NOT NULL 
GROUP BY `MONTH`
ORDER BY 1 ASC
)
SELECT `MONTH`, TOT_OFF,
 SUM(TOT_OFF) OVER(ORDER BY `MONTH`) AS ROLLING_TOT
FROM ROLLING_TOT
;
#LOOKING AT THE LAID OFF ACCORDING TO COMPANY

SELECT COMPANY, YEAR(`date`),sum(total_laid_off) 
FROM layoffs_staging2
GROUP BY COMPANY,YEAR(`date`) 
 ORDER BY 3 DESC  
;
-- DO CTE

WITH COMPANY_YEAR(COMPANY, YEARS, TOTAL_LAID_OFF) AS  -- 1ST CTE
(
SELECT COMPANY, YEAR(`date`),sum(total_laid_off) 
FROM layoffs_staging2
GROUP BY COMPANY,YEAR(`date`)
), COMPANY_YEAR_RANK AS   -- 2ND CTE USE THE 1ST CTE
(SELECT * ,
DENSE_RANK() OVER( PARTITION BY YEARS ORDER BY TOTAL_LAID_OFF DESC) AS RANKING
FROM COMPANY_YEAR
WHERE YEARS IS NOT NULL 
)
SELECT *   -- QUERY THE FINAL CTE/ 2ND CTE
FROM COMPANY_YEAR_RANK
WHERE RANKING <= 5
;



